---
title: "Exercise #3"
subtitle: "Fortgeschrittene Statistische Software f√ºr NF"
author: "Jonas Peter (12552802), Moritz Dresch (12579171)"
date: "`r Sys.Date()`"
output: distill::distill_article
---

## Exercise 1: Initializing git (4 Points)

### Exercise 1d: 
#### Strengths of Git: 
#### 1.: Distributed Version Control
#### 2.: Branching and Merging
#### Weaknesses of Git:
#### 1.: Complexity for Beginners
#### 2.: Potential for Conflicts

## Exercise 2: Putting your Repository on GitHub (3.5 Points)

### Exercise 2a,b,c: 
#### https://github.com/jpeter96/exeRcise-sheet-3


## Exercise 3: Baby-Names in Munich (3.5 Points)

### Exercise 3b:
```{r}
library(dplyr)
library(readr)

data_2022 <- read_csv("exeRcise-sheet-3/data/open_data_portal_2022.csv")
data_2023 <- read_csv("exeRcise-sheet-3/data/vornamen-muenchen-2023.csv")

str(data_2022)
str(data_2023)

# Check the type of the count variable "Anzahl" in both datasets
summary(data_2022$Anzahl)
summary(data_2023$Anzahl)

# Identify non-numeric entries in the count variable
unique(data_2022$Anzahl[!grepl("^[0-9]+$", data_2022$Anzahl)])
unique(data_2023$Anzahl[!grepl("^[0-9]+$", data_2023$Anzahl)])

# Convert the count variable to numeric, replacing non-numeric entries with NA
data_2022$Anzahl <- as.numeric(gsub("[^0-9]", "", data_2022$Anzahl))
data_2023$Anzahl <- as.numeric(gsub("[^0-9]", "", data_2023$Anzahl))

# Check the result of the conversion
summary(data_2022$Anzahl)
summary(data_2023$Anzahl)

# Save the cleaned data back to CSV files
write_csv(data_2022, "exeRcise-sheet-3/data/cleaned_data_2022.csv")
write_csv(data_2023, "exeRcise-sheet-3/data/cleaned_data_2023.csv")
```

Explanation and Repercussions
We began by loading the data from the CSV files for the years 2022 and 2023 using the read_csv function from the readr package. After loading the data, we examined the structure and summary statistics to understand the contents and identify any issues with the Anzahl variable, which represents counts.

It was observed that the Anzahl variable contained non-numeric characters, which prevented it from being treated as a numeric variable. To address this, we used the gsub function to remove any characters that were not digits (0-9). After cleaning the data, we converted the Anzahl variable to a numeric type. Any entries that could not be converted were replaced with NA.

Converting the Anzahl variable to numeric ensures that the data is suitable for quantitative analysis. However, this process may introduce some inaccuracies. For example, entries with non-numeric characters such as commas (e.g., "1,234") or mixed content (e.g., "12a") might be misinterpreted or lead to missing values (NA). These inaccuracies can affect the results of subsequent analyses, especially if the count data is critical for deriving insights or making decisions.

Handling missing values is another important consideration. While converting non-numeric entries to NA helps in cleaning the data, it also introduces missing values that need to be appropriately managed in any analysis to avoid biased results or incorrect conclusions.


c)  Calculate the total number of babies born in Munich in 2022
    and 2023. Which year had the bigger baby-boom?

d)  Add a new column `year` to both datasets which holds the correct
    year for each.

e)  Combine both datasets into one using `bind_rows()`.

f)  Combine the counts for same names to determine the most popular
    names across both years. Print out the top 10 names in a nicely
    formatted table for both years. Include a table caption.

## Exercise 4: Open Analysis (4 points)

This exercise is a bit more open-ended. You can choose any dataset from
[Our World in Data](https://ourworldindata.org/) and analyze it, while
determining the research question yourself.

a)  Go to <https://github.com/owid/owid-datasets/tree/master/datasets>
    and choose a dataset that interests you. You can have a look at
    <https://ourworldindata.org/> to gather some inspiration.
b)  Download the dataset and track it in git.
c)  Put the name / title of the dataset and a link to it below.

-   Dataset Name: ...
-   Link: <https://github.com/owid/owid-datasets/>...

d)  Come up with a (research) question you want to answer with the data
    and briefly explain why you believe this is an interesting question
    within one sentence. It should be a question that can be answered
    with the dataset and using R.
e)  Use R to answer your chosen question.
f)  Create a meaningful plot / figure with the dataset. Make sure to
    provide a figure caption (via the chunk options / Rmarkdown) and
    correctly label the figure.

## Final Note

Make sure to push all your commits and changes to GitHub before
submittining the exercise sheet.
